<template>
  <div>
    <p>Playing: {{ playing }}</p>
    <button @click="togglePlay">Toggle Play</button>
    <audio ref="audio" src="path/to/audio.mp3"></audio>
  </div>
</template>

<script>
import { mapMutations, ref, watch } from 'vuex';

export default {
  setup() {
    const playing = ref(false); // false表示停止播放，true表示开始播放
    const audio = ref(null); // 通过ref获取audio元素

    // 定义playAudio方法来控制audio的播放和暂停
    const playAudio = () => {
      if (audio.value) {
        audio.value.play();
      } else {
        console.warn('No audio element available to play');
      }
    };

    // 使用mapMutations将playing属性的修改映射到playAudio方法上
    const mutations = {
      setPlaying(state, value) {
        state.playing = value;
      },
    };
    const actions = {...mutations}; // 将mutations对象展开成actions对象，以便能够在组件中使用this调用它的方法。
    mapMutations(actions, ['setPlaying']); // 将mapMutations应用到actions对象上，从而将setPlaying方法映射到store中的playing属性上。
    watch(playing, () => { // 监视playing属性的变化并立即调用playAudio()方法
      playAudio();
    });

    return {
      playing,
      audio,
      togglePlay: () => { // 点击按钮时切换playing属性的值并刷新audio元素的播放状态。
        playing.value = !playing.value;
        playAudio();
      },
    };
  },
};
</script>